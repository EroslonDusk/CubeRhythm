on load:
	set {editor::bpm} to 120 if {editor::bpm} is not set
	set {editor::tick} to 0 if {editor::tick} is not set
	set {editor::length} to 1 if {editor::length} is not set
	set {editor::preTime} to 0 if {editor::preTime} is not set
	

on swap hand items:
	cancel event
	if {editMode} is true:
		if player is not sneaking:
			add 1 to {editor::tick}
		else:
			remove 1 from {editor::tick}

command /editor [<text>] [<number>]:
	trigger:
		player's gamemode is not spectator
		if arg-1 is not set:
			if {editMode} is not set:
				delete {savedX::*}
				delete {savedY::*}
				delete {savedType::*}
				set {editMode} to true
				message "&a开启编辑模式"
				message ""
				message "&e/editor help &7-&f 查看命令帮助"
				message "&e/editor bpm <number> &7-&f 每分钟拍数"
				message "&b/step <integer> &7-&f /step 4 表示步长为1/4拍"
				message "&b/b <number> &7-&f 传送到某一拍"
				message "&e/editor pretime <number> &7-&f 将第1拍的时间设置为x秒，不是变速曲就设为0并且不要动"
				message ""
				message "&f/editor &c退出编辑模式"
				message ""
				clear player's inventory
				give light blue wool named "&b&lTap" to player
				give orange wool named "&6&lDouble" to player
				give yellow wool named "&e&lDrag" to player
				give white wool named "&f&lHold" to player
				give pink wool named "&b&l← &d&lFlick(左)" to player
				give red wool named "&c&lFlick(右) &b&l→" to player
				give red dye named "&c&l清空场上音符" to player
				give lime concrete named "&a&l步进1格" to player
				give red concrete named "&c&l后退1格" to player
				set blocks within location(3, 3, 4, world "world", 0, 0) and location(-3, -3, 4, world "world", 0, 0) to glass
			else:
				delete {editMode}
				message "&c关闭编辑模式"
				clear player's inventory
				delete {savedX::*}
				delete {savedY::*}
				delete {savedType::*}
				set blocks within location(3, 3, 4, world "world", 0, 0) and location(-3, -3, 4, world "world", 0, 0) to air
		else if arg-1 is "bpm":
			arg-2 is set
			set {editor::bpm} to arg-2
			send title "&a✔" with subtitle "&a &a" to player for 0.5 seconds with fade in 0.5 seconds and fade out 0.5 seconds
		else if arg-1 is "pretime":
			arg-2 is set
			set {editor::preTime} to arg-2
			send title "&a✔" with subtitle "&a &a" to player for 0.5 seconds with fade in 0.5 seconds and fade out 0.5 seconds
		else if arg-1 is "help":
			message ""
			message "&e/editor help &7-&f 查看命令帮助"
			message "&e/editor bpm <number> &7-&f 每分钟拍数"
			message "&b/step <integer> &7-&f /step 4 表示步长为1/4拍"
			message "&b/b <number> &7-&f 传送到某一拍"
			message "&e/editor pretime <number> &7-&f 将第1拍的时间设置为x秒，不是变速曲就设为0并且不要动"
			message ""
			message "&f/editor &c退出编辑模式"
			message ""

command /b <number>:
	trigger:
		player's gamemode is not spectator
		if {editMode} is set:
			argument is set
			set {editor::tick} to ((argument) - 1) * {editor::length}
			send title "&a✔" with subtitle "&a &a" to player for 0.5 seconds with fade in 0.5 seconds and fade out 0.5 seconds

command /step <integer>:
	trigger:
		player's gamemode is not spectator
		if {editMode} is set:
			argument is set
			set {_past} to {editor::length}
			set {editor::length} to argument
			set {editor::tick} to {editor::tick} * {editor::length} / {_past}
			send title "&a✔" with subtitle "&a &a" to player for 0.5 seconds with fade in 0.5 seconds and fade out 0.5 seconds

every 2 ticks:
	if {editMode} is set:
		send action bar "&6BPM: &f%{editor::bpm}% &8| &b位置: &f%floor({editor::tick}/{editor::length}) + 1% : %mod({editor::tick}, {editor::length})% / %{editor::length}% (%{editor::tick}/{editor::length}*(60/{editor::bpm})+{editor::preTime}%s) &8| &a步长: &f1 / %{editor::length}% &8| &f输入w/a/s/d生成 " to all players

on right click:
	{editMode} is set
	cancel event
	player's gamemode is not spectator
	event-block is glass or any wool
	if player's tool is light blue wool named "&b&lTap":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to light blue wool
			add x location of event-location to {savedX::Tap::*}
			add y location of event-location to {savedY::Tap::*}
		else if block at event-location is light blue wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Tap::*}:
				loop-value is x location of event-location
				delete {savedX::Tap::%loop-index%}
				delete {savedY::Tap::%loop-index%}
				exit loop
	else if player's tool is orange wool named "&6&lDouble":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to orange wool
			add x location of event-location to {savedX::Double::*}
			add y location of event-location to {savedY::Double::*}
		else if block at event-location is orange wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Double::*}:
				loop-value is x location of event-location
				delete {savedX::Double::%loop-index%}
				delete {savedY::Double::%loop-index%}
				exit loop
	else if player's tool is yellow wool named "&e&lDrag":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to yellow wool
			add x location of event-location to {savedX::Drag::*}
			add y location of event-location to {savedY::Drag::*}
		else if block at event-location is yellow wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Drag::*}:
				loop-value is x location of event-location
				delete {savedX::Drag::%loop-index%}
				delete {savedY::Drag::%loop-index%}
				exit loop
	else if player's tool is white wool named "&f&lHold":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to white wool
			add x location of event-location to {savedX::Hold::*}
			add y location of event-location to {savedY::Hold::*}
		else if block at event-location is white wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Hold::*}:
				loop-value is x location of event-location
				delete {savedX::Hold::%loop-index%}
				delete {savedY::Hold::%loop-index%}
				exit loop
	else if player's tool is pink wool named "&b&l← &d&lFlick(左)":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to pink wool
			add x location of event-location to {savedX::Flick::*}
			add y location of event-location to {savedY::Flick::*}
			set {savedType::Flick} to "left"
		else if block at event-location is pink wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Flick::*}:
				loop-value is x location of event-location
				delete {savedX::Flick::%loop-index%}
				delete {savedY::Flick::%loop-index%}
				delete {savedType::Flick}
				exit loop
	else if player's tool is red wool named "&c&lFlick(右) &b&l→":
		if block at event-location is glass:
			wait 1 tick
			set block at event-location to red wool
			add x location of event-location to {savedX::Flick::*}
			add y location of event-location to {savedY::Flick::*}
			set {savedType::Flick} to "right"
		else if block at event-location is red wool:
			wait 1 tick
			set block at event-location to glass
			loop {savedX::Flick::*}:
				loop-value is x location of event-location
				delete {savedX::Flick::%loop-index%}
				delete {savedY::Flick::%loop-index%}
				delete {savedType::Flick}
				exit loop
	else if player's tool is red dye named "&c&l清空场上音符":
		delete {savedX::*}
		delete {savedY::*}
		delete {savedType::*}
		set blocks within location(3, 3, 4, world "world", 0, 0) and location(-3, -3, 4, world "world", 0, 0) to glass
	else if player's tool is lime concrete:
		add 1 to {editor::tick}
	else if player's tool is red concrete:
		remove 1 from {editor::tick}
	

on chat:
	{editMode} is set
	player's gamemode is not spectator
	cancel event
	set {_1} to chat message
	if {_1} is "w" or "a" or "s" or "d":
		set {_face} to {_1}
	set {_1} to {editor::tick}/{editor::length}*(60/{editor::bpm})+{editor::preTime}
	{_1} is set
	set {_gen} to "empty"
	if {savedX::Tap::1} is set:
		set {_gen} to "tap(%{_1}%, ""%{_face}%"", %{savedX::Tap::1} - 0.5%, %{savedY::Tap::1} - 0.5%, false)"
	if {savedX::Drag::1} is set:
		set {_gen} to "drag(%{_1}%, ""%{_face}%"", %{savedX::Drag::1} - 0.5%, %{savedY::Drag::1} - 0.5%, false)"
	if {savedX::Hold::1} is set:
		set {_gen} to "hold(%{_1}%, ""%{_face}%"", %{savedX::Hold::1} - 0.5%, %{savedY::Hold::1} - 0.5%, false)"
	if {savedX::Flick::1} is set:
		set {_gen} to "flick(%{_1}%, ""%{_face}%"", ""%{savedType::Flick}%"", false)"
	if {savedX::Double::1} is set:
		set {_gen} to "double(%{_1}%, ""%{_face}%"", %{savedX::Double::1} - 0.5%, %{savedY::Double::1} - 0.5%, %{savedX::Double::2} - 0.5%, %{savedY::Double::2} - 0.5%, false)"
	{_gen} is not "empty"
	if {_gen} contains "<none>":
		replace all "<none>" with "&e<none>&c" in {_gen}
		broadcast "&c✘ &c%{_gen}%"
		broadcast "&f你的音符格式出现了缺失，请修改音符再尝试生成"
	else:
		broadcast "&a✔ &b%{_gen}%" if {_gen} contains "tap"
		broadcast "&a✔ &e%{_gen}%" if {_gen} contains "drag"
		broadcast "&a✔ &f%{_gen}%" if {_gen} contains "hold"
		broadcast "&a✔ &d%{_gen}%" if {_gen} contains "flick"
		broadcast "&a✔ &6%{_gen}%" if {_gen} contains "double"
		log "%{_gen}%" to file "generated.log"