########################################################
#                                                      #
#                   谱面读取部分                       #
#                                                      #
########################################################

on load:
	create section with {_id}, {_type}, {_time}, {_face}, {_x}, {_y}, {_x1}, {_y1}, {_x2}, {_y2}, {_turn}, {_section}, {_glowing}, {_tag} stored in {asyncNoteRegister}:
		if {editMode} is not true:
			set {loadedNotes::type::%{_id}%} to {_type}
			set {loadedNotes::time::%{_id}%} to {_time}
			set {loadedNotes::face::%{_id}%} to {_face}
			set {loadedNotes::x::%{_id}%} to {_x}
			set {loadedNotes::y::%{_id}%} to {_y}
			set {loadedNotes::x1::%{_id}%} to {_x1}
			set {loadedNotes::y1::%{_id}%} to {_y1}
			set {loadedNotes::x2::%{_id}%} to {_x2}
			set {loadedNotes::y2::%{_id}%} to {_y2}
			set {loadedNotes::turn::%{_id}%} to {_turn}
			set {loadedNotes::section::%{_id}%} to {_section}
			set {loadedNotes::glowing::%{_id}%} to {_glowing}
			set {loadedNotes::tag::%{_id}%} to {_tag}
		else:
			set {_uuid} to random uuid
			if {_type} is not "double":
				set {_loc} to location({_x} + 0.5, {_y} + 0.5, 4, world "world", 0, 0)
				if {_turn} is "right":
					set {editorSave::type::%{_uuid}%} to "flickR"
				else if {_turn} is "left":
					set {editorSave::type::%{_uuid}%} to "flickL"
				else:
					set {editorSave::type::%{_uuid}%} to {_type}
				set {editorSave::loc::%{_uuid}%} to location(0.5, 0.5, 4, world "world", 0, 0) if {editorSave::type::%{_uuid}%} is "flickR" or "flickL" or "execution"
				set {editorSave::time::%{_uuid}%} to {_time} if {_time} is set
				set {editorSave::loc::%{_uuid}%} to {_loc} if {_loc} is set
				set {editorSave::face::%{_uuid}%} to {_face} if {_face} is set
				set {editorSave::turn::%{_uuid}%} to {_turn} if {_turn} is set
				set {editorSave::section::%{_uuid}%} to "暂不支持" if {_section} is set
				set {editorSave::glowing::%{_uuid}%} to {_glowing} if {_glowing} is set
				set {editorSave::tag::%{_uuid}%} to {_tag} if {_tag} is set
			else:
				set {_loc1} to location({_x1} + 0.5, {_y1} + 0.5, 4, world "world", 0, 0)
				set {_loc2} to location({_x2} + 0.5, {_y2} + 0.5, 4, world "world", 0, 0)
				set {editorSave::type::%{_uuid}%} to {_type} if {_type} is set
				set {editorSave::time::%{_uuid}%} to {_time} if {_time} is set
				set {editorSave::loc::%{_uuid}%} to {_loc1} if {_loc1} is set
				set {editorSave::face::%{_uuid}%} to {_face} if {_face} is set
				set {editorSave::turn::%{_uuid}%} to {_turn} if {_turn} is set
				set {editorSave::section::%{_uuid}%} to "暂不支持" if {_section} is set
				set {editorSave::glowing::%{_uuid}%} to {_glowing} if {_glowing} is set
				set {editorSave::tag::%{_uuid}%} to {_tag} if {_tag} is set
				set {_uuid2} to random uuid
				set {editorSave::type::%{_uuid2}%} to {_type} if {_type} is set
				set {editorSave::time::%{_uuid2}%} to {_time} if {_time} is set
				set {editorSave::loc::%{_uuid2}%} to {_loc2} if {_loc2} is set
				set {editorSave::face::%{_uuid2}%} to {_face} if {_face} is set
				set {editorSave::turn::%{_uuid2}%} to {_turn} if {_turn} is set
				set {editorSave::section::%{_uuid2}%} to "暂不支持" if {_section} is set
				set {editorSave::glowing::%{_uuid2}%} to {_glowing} if {_glowing} is set
				set {editorSave::tag::%{_uuid2}%} to {_tag} if {_tag} is set
				
			

function execution(time: number, section: section):
	add 1 to {noteID}
	set {_type} to "execution"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, "empty", "empty", "empty", "empty", "empty", "empty", "empty", "empty", {_section}, "empty", "empty"

function tap(time: number, face: text, x: number, y: number, glowing: boolean, tag: text):
	add 1 to {maxNote}
	add 1 to {noteID}
	set {_type} to "tap"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, {_face}, {_x}, {_y}, "empty", "empty", "empty", "empty", "empty", "empty", {_glowing}, {_tag}

function drag(time: number, face: text, x: number, y: number, glowing: boolean, tag: text):
	add 1 to {maxNote}
	add 1 to {noteID}
	set {_type} to "drag"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, {_face}, {_x}, {_y}, "empty", "empty", "empty", "empty", "empty", "empty", {_glowing}, {_tag}

function hold(time: number, face: text, x: number, y: number, glowing: boolean, tag: text):
	add 1 to {noteID}
	set {_type} to "hold"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, {_face}, {_x}, {_y}, "empty", "empty", "empty", "empty", "empty", "empty", {_glowing}, {_tag}

function flick(time: number, face: text, turn: text, glowing: boolean, tag: text):
	add 1 to {maxNote}
	add 1 to {noteID}
	set {_type} to "flick"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, {_face}, "empty", "empty", "empty", "empty", "empty", "empty", {_turn}, "empty", {_glowing}, {_tag}

function double(time: number, face: text, x1: number, y1: number, x2: number, y2: number, glowing: boolean, tag: text):
	add 2 to {maxNote}
	add 1 to {noteID}
	set {_type} to "double"
	run section {asyncNoteRegister} async with {noteID}, {_type}, {_time}, {_face}, "empty", "empty", {_x1}, {_y1}, {_x2}, {_y2}, "empty", "empty", {_glowing}, {_tag}

function drawTap(face: text, x: number, y: number, z: number, glowing: boolean, tag: text):
	set {_x1} to {_x}+0.5
	set {_y1} to {_y}-0.5
	set {_z1} to {_z}+0.5
	if {_face} is "w":
		set {_loc1} to location({_x}, {_y}, {_z}, world "world", 0, 0)
		set {_loc2} to location({_x1}, {_y1}, {_z1}, world "world", 0, 0)
	if {_face} is "a":
		remove 1 from {_x1}
		set {_loc1} to location({_z}, {_y}, -1*{_x}, world "world", 90, 0)
		set {_loc2} to location({_z1}, {_y1}, -1*{_x1}, world "world", 90, 0)
	if {_face} is "s":
		remove 1 from {_x1}
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_x}+1, {_y}, -1*{_z}+1, world "world", 180, 0)
		set {_loc2} to location(-1*{_x1}, {_y1}, -1*{_z1}, world "world", 180, 0)
	if {_face} is "d":
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_z}+1, {_y}, {_x}+1, world "world", 270, 0)
		set {_loc2} to location(-1*{_z1}, {_y1}, {_x1}, world "world", 270, 0)
	summon block display at {_loc1}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to light_blue_concrete
		set display scale of entity to vector(1,1,0.5*{speed::%uuid of {actor}%})
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
			set display glow color override of entity to bukkitColor(0,50,255,255)
		set {_e} to entity
	
	summon interaction at {_loc2}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "tap"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	wait 2 ticks
	set display brightness of {_e} to displayBrightness(15,15)
	set display translation of {_e} to vector(0,0,-100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"

function drawHold(face: text, x: number, y: number, z: number, glowing: boolean, tag: text):
	set {_x1} to {_x}+0.5
	set {_y1} to {_y}-0.5+20
	set {_z1} to {_z}+1
	if {_face} is "w":
		set {_loc1} to location({_x}, {_y}, {_z}+0.1, world "world", 0, 0)
		set {_loc2} to location({_x1}, {_y1}, {_z1}, world "world", 0, 0)
	if {_face} is "a":
		remove 1 from {_x1}
		set {_loc1} to location({_z}+0.1, {_y}, -1*{_x}+1, world "world", -90, 0)
		set {_loc2} to location({_z1}, {_y1}, -1*{_x1}, world "world", -90, 0)
	if {_face} is "s":
		remove 1 from {_x1}
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_x}+1, {_y}, -1*{_z}+0.9, world "world", 180, 0)
		set {_loc2} to location(-1*{_x1}, {_y1}, -1*{_z1}, world "world", 180, 0)
	if {_face} is "d":
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_z}+0.9, {_y}, {_x}, world "world", 90, 0)
		set {_loc2} to location(-1*{_z1}, {_y1}, {_x1}, world "world", 90, 0)
	summon block display at {_loc1}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to white_concrete
		set display scale of entity to vector(1,1,3*{speed::%uuid of {actor}%})
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
			set display glow color override of entity to bukkitColor(255,255,255,255)
		set {_e} to entity
	
	summon interaction at {_loc2}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "hold"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	wait 2 ticks
	set display brightness of {_e} to displayBrightness(15,15)
	set display translation of {_e} to vector(0,0,-100*{speed::%uuid of {actor}%})

function drawDrag(face: text, x: number, y: number, z: number, glowing: boolean, tag: text):
	set {_x1} to {_x}+0.5
	set {_y1} to {_y}-0.5
	set {_z1} to {_z}+1
	if {_face} is "w":
		set {_loc1} to location({_x}, {_y}, {_z}, world "world", 0, 0)
		set {_loc2} to location({_x1}, {_y1}, {_z1}, world "world", 0, 0)
	if {_face} is "a":
		remove 1 from {_x1}
		set {_loc1} to location({_z}, {_y}, -1*{_x}, world "world", 90, 0)
		set {_loc2} to location({_z1}, {_y1}, -1*{_x1}, world "world", 90, 0)
	if {_face} is "s":
		remove 1 from {_x1}
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_x}+1, {_y}, -1*{_z}+1, world "world", 180, 0)
		set {_loc2} to location(-1*{_x1}, {_y1}, -1*{_z1}, world "world", 180, 0)
	if {_face} is "d":
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_z}+1, {_y}, {_x}+1, world "world", 270, 0)
		set {_loc2} to location(-1*{_z1}, {_y1}, {_x1}, world "world", 270, 0)
	summon block display at {_loc1}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to yellow_concrete
		set display scale of entity to vector(1,1,0.5*{speed::%uuid of {actor}%})
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
			set display glow color override of entity to bukkitColor(255,255,235,42)
		set {_e} to entity
	
	summon interaction at {_loc2}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "drag"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	wait 2 ticks
	set display brightness of {_e} to displayBrightness(15,15)
	set display translation of {_e} to vector(0,0,-100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"

function drawFlick(face: text, z: number, turn: text, glowing: boolean, tag: text):
	set {_x} to 0
	set {_y} to 0
	set {_z} to {_z}-0.5
	set {_x1} to {_x}+0.5
	set {_y1} to 20
	set {_x2} to -2
	set {_y2} to -2
	set {_z1} to {_z}+1
	if {_face} is "w":
		set {_loc1} to location({_x2}, {_y2}, {_z}, world "world", 0, 0)
		set {_loc2} to location({_x1}, {_y1}, {_z1}, world "world", 0, 0)
		set {_loc3} to location({_x}+0.75, {_y}-2.75, {_z}+0.4, world "world", 180, 0)
	if {_face} is "a":
		remove 1 from {_x1}
		set {_loc1} to location({_z}+1, {_y2}, -1*{_x2}-4, world "world", 90, 0)
		set {_loc2} to location({_z1}, {_y1}, -1*{_x1}, world "world", 90, 0)
		set {_loc3} to location({_z}+0.4, {_y}-2.75, -1*{_x}+0.25, world "world", 90, 0)
	if {_face} is "s":
		remove 1 from {_x1}
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_x2}+1, {_y2}, -1*{_z}+1, world "world", 180, 0)
		set {_loc2} to location(-1*{_x1}, {_y1}, -1*{_z1}, world "world", 180, 0)
		set {_loc3} to location(-1*{_x}+0.25, {_y}-2.75, -1*{_z}+0.6, world "world", 0, 0)
	if {_face} is "d":
		remove 1 from {_z1}
		set {_loc1} to location(-1*{_z}, {_y2}, {_x2}+5, world "world", 270, 0)
		set {_loc2} to location(-1*{_z1}, {_y1}, {_x1}, world "world", 270, 0)
		set {_loc3} to location(-1*{_z}+0.6, {_y}-2.75, {_x}+0.75, world "world", 270, 0)   
	summon block display at {_loc1}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to white_stained_glass_pane[east=true,north=false,south=false,waterlogged=false,west=true]
		set display scale of entity to vector(5,5,1)
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
		set {_e1} to entity
	
	if {_turn} is "left":
		summon text display at {_loc3}:
			set display interpolation start of entity to 0
			set display interpolation duration of entity to 100
			set display text of the entity to "§f←"
			set display scale of entity to vector(20,20,0)
			set display text background color of the entity to bukkitColor(0,0,0,0)
			set metadata value "linkbind" of entity to {_uuid}
			set {_e2} to entity
	
	if {_turn} is "right":
		summon text display at {_loc3}:
			set display interpolation start of entity to 0
			set display interpolation duration of entity to 100
			set display text of the entity to "§f→"
			set display scale of entity to vector(20,20,0)
			set display text background color of the entity to bukkitColor(0,0,0,0)
			set metadata value "linkbind" of entity to {_uuid}
			set {_e3} to entity
	
	summon interaction at {_loc2}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "flick"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "turn" of entity to "%{_turn}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	wait 2 ticks
	set display brightness of {_e1} to displayBrightness(15,15)
	set display brightness of {_e2} to displayBrightness(15,15)
	set display brightness of {_e3} to displayBrightness(15,15)
	set display translation of {_e1} to vector(0,0,-100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e2} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e3} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e1} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"
	set display translation of {_e2} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"
	set display translation of {_e3} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"

function drawDouble(face: text, xa: number, ya: number, za: number, xb: number, yb: number, zb: number, glowing: boolean, tag: text):
	if {_xa} < {_xb}:
		set {_t1} to {_xa}
		set {_t2} to {_ya}
		set {_t3} to {_za}
		set {_xa} to {_xb}
		set {_ya} to {_yb}
		set {_za} to {_zb}
		set {_xb} to {_t1}
		set {_yb} to {_t2}
		set {_zb} to {_t3}
	set {_xa1} to {_xa}+0.5
	set {_ya1} to {_ya}-0.5
	set {_za1} to {_za}+1
	if {_face} is "w":
		set {_loc1} to location({_xa}, {_ya}, {_za}, world "world", 0, 0)
		set {_loc2} to location({_xa1}, {_ya1}, {_za1}, world "world", 0, 0)
	if {_face} is "a":
		remove 1 from {_xa1}
		set {_loc1} to location({_za}, {_ya}, -1*{_xa}, world "world", 90, 0)
		set {_loc2} to location({_za1}, {_ya1}, -1*{_xa1}, world "world", 90, 0)
	if {_face} is "s":
		remove 1 from {_xa1}
		remove 1 from {_za1}
		set {_loc1} to location(-1*{_xa}+1, {_ya}, -1*{_za}+1, world "world", 180, 0)
		set {_loc2} to location(-1*{_xa1}, {_ya1}, -1*{_za1}, world "world", 180, 0)
	if {_face} is "d":
		remove 1 from {_za1}
		set {_loc1} to location(-1*{_za}+1, {_ya}, {_xa}+1, world "world", 270, 0)
		set {_loc2} to location(-1*{_za1}, {_ya1}, {_xa1}, world "world", 270, 0)
	summon block display at {_loc1}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to orange_concrete
		set display scale of entity to vector(1,1,0.5*{speed::%uuid of {actor}%})
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
			set display glow color override of entity to bukkitColor(255,255,180,0)
		set {_e1} to entity
	
	summon interaction at {_loc2}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "double"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		set {_entity1} to entity
		set {_uuid1} to uuid of entity
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	set {_xb1} to {_xb}+0.5
	set {_yb1} to {_yb}-0.5
	set {_zb1} to {_zb}+1
	if {_face} is "w":
		set {_loc3} to location({_xb}, {_yb}, {_zb}, world "world", 0, 0)
		set {_loc4} to location({_xb1}, {_yb1}, {_zb1}, world "world", 0, 0)
	if {_face} is "a":
		remove 1 from {_xb1}
		set {_loc3} to location({_zb}, {_yb}, -1*{_xb}, world "world", 90, 0)
		set {_loc4} to location({_zb1}, {_yb1}, -1*{_xb1}, world "world", 90, 0)
	if {_face} is "s":
		remove 1 from {_xb1}
		remove 1 from {_zb1}
		set {_loc3} to location(-1*{_xb}+1, {_yb}, -1*{_zb}+1, world "world", 180, 0)
		set {_loc4} to location(-1*{_xb1}, {_yb1}, -1*{_zb1}, world "world", 180, 0)
	if {_face} is "d":
		remove 1 from {_zb1}
		set {_loc3} to location(-1*{_zb}+1, {_yb}, {_xb}+1, world "world", 270, 0)
		set {_loc4} to location(-1*{_zb1}, {_yb1}, {_xb1}, world "world", 270, 0)
	summon block display at {_loc3}:
		set display interpolation start of entity to 0
		set display interpolation duration of entity to 100
		set display block data of entity to orange_concrete
		set display scale of entity to vector(1,1,0.5*{speed::%uuid of {actor}%})
		set metadata value "tag" of entity to {_tag}
		set {_uuid} to uuid of entity
		if {_glowing} is true:
			set glowing of entity to true
			set display glow color override of entity to bukkitColor(255,255,180,0)
		set {_e2} to entity
	
	summon interaction at {_loc4}:
		set interaction height of entity to 2
		set interaction width of entity to 2
		set metadata value "notetype" of entity to "double"
		set metadata value "face" of entity to "%{_face}%"
		set metadata value "linkuuid" of entity to "%{_uuid}%" #击中音符时通过uuid将对应的block display销毁
		set metadata value "tag" of entity to {_tag}
		set {_entity2} to entity
		set {_uuid2} to uuid of entity
		if {_glowing} is true:
			set metadata value "glowing" of entity to true
	
	set metadata value "linknote" of {_entity1} to "%{_uuid2}%"
	set metadata value "linknote" of {_entity2} to "%{_uuid1}%" #击中1时消除2，击中2时消除1
	set {_d1} to distance between {_loc1} and {_loc3}
	set {_d3} to distance between {_loc1} and {_loc3}
	set {_d2} to abs({_xa} - {_xb})
	set {_acos} to acos({_d2}/{_d1}) - 90
	#broadcast "distance: %{_d1}%"
	#broadcast "angle: %{_acos}%"
	if {_ya} <= {_yb}:
		{_loc2}.add(0, 1, -0.8) if {_face} is "w"
		{_loc2}.add(0, 1, 0.8) if {_face} is "s"
		{_loc2}.add(-0.8, 1, 0) if {_face} is "a"
		{_loc2}.add(0.8, 1, 0) if {_face} is "d"
		summon block display at {_loc2}:
			set display interpolation start of entity to 0
			set display interpolation duration of entity to 100
			set display block data of entity to white_concrete
			set display scale of entity to vector(0.1,{_d3},0.1)
			set metadata value "note1" of entity to {_uuid2}
			set metadata value "note2" of entity to {_uuid1}
			set metadata value "face" of entity to {_face}
			set metadata value "tag" of entity to {_tag}
			set pitch of entity to {_acos}
			set yaw of entity to -90 if {_face} is "w"
			set yaw of entity to -180 if {_face} is "a"
			set yaw of entity to 90 if {_face} is "s"
			set yaw of entity to 0 if {_face} is "d"
			if {_glowing} is true:
				set glowing of entity to true
				set display glow color override of entity to bukkitColor(255,255,255,255)
			set {_e3} to entity
	
	else:
		{_loc4}.add(0, 1, -0.9) if {_face} is "w"
		{_loc4}.add(0, 1, 0.9) if {_face} is "s"
		{_loc4}.add(-0.9, 1, 0) if {_face} is "a"
		{_loc4}.add(0.9, 1, 0) if {_face} is "d"
		summon block display at {_loc4}:
			set display interpolation start of entity to 0
			set display interpolation duration of entity to 100
			set display block data of entity to white_concrete
			set display scale of entity to vector(0.1,{_d3},0.1)
			set metadata value "note1" of entity to {_uuid2}
			set metadata value "note2" of entity to {_uuid1}
			set metadata value "face" of entity to {_face}
			set metadata value "tag" of entity to {_tag}
			set pitch of entity to {_acos}
			set yaw of entity to 90 if {_face} is "w"
			set yaw of entity to 0 if {_face} is "a"
			set yaw of entity to -90 if {_face} is "s"
			set yaw of entity to -180 if {_face} is "d"
			if {_glowing} is true:
				set glowing of entity to true
				set display glow color override of entity to bukkitColor(255,255,255,255)
			set {_e4} to entity
	
	wait 2 ticks
	set display brightness of {_e1} to displayBrightness(15,15)
	set display brightness of {_e2} to displayBrightness(15,15)
	set display brightness of {_e3} to displayBrightness(15,15)
	set display brightness of {_e4} to displayBrightness(15,15)
	set display translation of {_e1} to vector(0,0,-100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e2} to vector(0,0,-100*{speed::%uuid of {actor}%}) if {_face} is "w" or "s"
	set display translation of {_e3} to vector(100*{speed::%uuid of {actor}%}, 0, 0) if {_face} is "w" or "s"
	set display translation of {_e4} to vector(-100*{speed::%uuid of {actor}%}, 0, 0) if {_face} is "w" or "s"
	set display translation of {_e1} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"
	set display translation of {_e2} to vector(0,0,100*{speed::%uuid of {actor}%}) if {_face} is "a" or "d"
	set display translation of {_e3} to vector(100*{speed::%uuid of {actor}%}, 0, 0) if {_face} is "a" or "d"
	set display translation of {_e4} to vector(-100*{speed::%uuid of {actor}%}, 0, 0) if {_face} is "a" or "d"
